{{ 'component-article-card.css' | asset_url | stylesheet_tag }}
{{ 'component-card.css' | asset_url | stylesheet_tag }}
{{ 'section-main-blog.css' | asset_url | stylesheet_tag }}

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
.formm-submitted .field__input{
    display:none;
}
{%- endstyle -%}

{%- paginate blog.articles by 7 -%}
  <div class="main-blog page-width section-{{ section.id }}-padding">
    <h1 class="title--primary{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--fade-in{% endif %}">
      {{ blog.title | escape }}
    </h1>

    <div class="blog-articles {% if section.settings.layout == 'collage' %}blog-articles--collage{% endif %}">
  {%- assign first_article = null -%}
  {%- assign other_articles = '' -%}
  
  {%- for article in blog.articles -%}
    {%- if article.title == "Startup Savvy: Young Entrepreneur Paden Sickles Of SickFit Shares Their Secrets For Rapid Growth and Success" -%}
      {%- assign first_article = article -%}
    {%- else -%}
      {%- assign other_articles = other_articles | append: article -%}
    {%- endif -%}
  {%- endfor -%}
  
  {%- if first_article -%}
    <!-- Show the prioritized article first -->
    <div
      class="blog-articles__article article{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
      {% if settings.animations_reveal_on_scroll %}
        data-cascade
        style="--animation-order: 1;"
      {% endif %}
    >
      {%- render 'article-card',
        article: first_article,
        media_height: section.settings.image_height,
        media_aspect_ratio: first_article.image.aspect_ratio,
        show_image: section.settings.show_image,
        show_date: section.settings.show_date,
        show_author: section.settings.show_author,
        show_excerpt: true
      -%}
    </div>
  {%- endif -%}

  <!-- Now display all the other articles -->
  {%- for article in blog.articles -%}
    {%- if article.title != "Startup Savvy: Young Entrepreneur Paden Sickles Of SickFit Shares Their Secrets For Rapid Growth and Success" -%}
            <div
              class="blog-articles__article article{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
              {% if settings.animations_reveal_on_scroll %}
                data-cascade
                style="--animation-order: {{ forloop.index }};"
              {% endif %}
            >
              {%- render 'article-card',
                article: article,
                media_height: section.settings.image_height,
                media_aspect_ratio: article.image.aspect_ratio,
                show_image: section.settings.show_image,
                show_date: section.settings.show_date,
                show_author: section.settings.show_author,
                show_excerpt: true
              -%}
            </div>
          {%- endif -%}
        {%- endfor -%}
      
        {%- if paginate.current_page == paginate.pages and blog.articles.size > 0 -%}
          
          <div id="newsletter-section" class="blog-newsletter-section">
            <div id="contact_form"></div>
            <div class="article-newsletter">
              <div class="newsletter-flex">
                <div class="newsletter-blog-text col-6">
                  <h2 class="newsletter-title">{{ section.settings.heading }}</h2>
                  <div class="description">{{ section.settings.description }}</div>
                </div>
                <div {{ section.shopify_attributes }} class="newsletter-form-blog col-6">
                  {% form 'customer', class: 'newsletter-form', novalidate: 'novalidate' %}
  <input type="hidden" name="contact[tags]" value="newsletter">
  <div
    class="newsletter-form__field-wrapper{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
    {% if settings.animations_reveal_on_scroll %}
      data-cascade
      style="--animation-order: {{ forloop.index }};"
    {% endif %}
  >
    <div class="field">
      <input
        type="email"
        name="contact[email]"
        class="field__input"
        value="{{ form.email }}"
        autocorrect="off"
        autocapitalize="off"
        autocomplete="email"
        placeholder="name@example.com"
        id="newsletter-email"
      >
      <label class="field__label">{{ 'newsletter.label' | t }}</label>
      <button
        type="submit"
        class="newsletter-form__button field__button"
        name="commit"
        aria-label="{{ 'newsletter.button_label' | t }}"
        disabled
        id="newsletter-submit"
      >
        {% render 'icon-arrow' %}
      </button>
    </div>
    <small class="newsletter-error newsletter-form__message form__message" style="display:none;">
      Please enter a valid email address.
    </small>
  </div>

  {%- if form.posted_successfully? -%}
    <h3
      class="newsletter-form__message newsletter-form__message--success form__message"
      tabindex="-1"
      autofocus
    >
      <div class="news-letter-flex">
        {% render 'main-icon' %}
        <div class="success-text">
          <h4>Youâ€™re all set!</h4>
          <p>Thanks for subscribing!</p>
        </div>
    </div>
    </h3>
  {%- endif -%}
{% endform %}
                </div>
              </div>
            </div>
          </div>
        {%- endif -%}
      </div>
    {%- if paginate.pages > 1 -%}
      {%- render 'pagination', paginate: paginate -%}
    {%- endif -%}
  </div>
{%- endpaginate -%}




<!----------newsletters----------->
<script>
document.addEventListener('DOMContentLoaded', function() {
    const form = document.querySelector('.newsletter-form');
    const emailField = form.querySelector('input[name="contact[email]"]');
    const submitButton = form.querySelector('.newsletter-form__button');
    const errorMessage = form.querySelector('.newsletter-error');
    const successMessage = form.querySelector('.newsletter-form__message--success');
    const contactFormSection = document.querySelector('#contact_form');
    
    // Existing duplicate email message element
    let duplicateEmailMessage = form.querySelector('.has-duplicate-error-message');

    // If the duplicate email message doesn't exist, create it
    if (!duplicateEmailMessage) {
        duplicateEmailMessage = document.createElement('small');
        duplicateEmailMessage.classList.add('newsletter-error', 'newsletter-form__message', 'form__message', 'has-duplicate-error-message');
        duplicateEmailMessage.style.display = 'none';
        duplicateEmailMessage.innerHTML = `<svg class="error-icon" style="display: none;">...</svg> This email is already subscribed.`;
        form.appendChild(duplicateEmailMessage);
    }

    function hideInputFields() {
        form.querySelectorAll('.newsletter-form__field-wrapper .field__input').forEach(input => {
            input.style.display = 'none';
        });
    }

    function resetForm() {
        form.querySelectorAll('.newsletter-form__field-wrapper .field__input').forEach(input => {
            input.style.display = ''; // Reset the display style to show input fields
        });
        if (successMessage) {
            successMessage.style.display = 'none'; // Hide success message on reload
        }
        duplicateEmailMessage.style.display = 'none'; // Hide duplicate email message on reset
    }

    const isHardReload = performance.getEntriesByType('navigation')[0].type === 'reload';

    if (isHardReload) {
        localStorage.removeItem('formSubmitted');
        localStorage.removeItem('duplicateEmailError'); // Clear the duplicate email error on hard reload
        resetForm(); // Reset form to its normal state after hard reload
    }

    if (successMessage && successMessage.style.display !== 'none') {
        // Success message is displayed, hide duplicate email message
        duplicateEmailMessage.style.display = 'none';
        hideInputFields();
    } else if (localStorage.getItem('formSubmitted') === 'true' && !isHardReload) {
        hideInputFields();
        if (successMessage) {
            successMessage.style.display = 'block'; // Show success message if form was submitted
        }
        duplicateEmailMessage.style.display = 'none'; // Hide duplicate email message
    }

    if (localStorage.getItem('duplicateEmailError') === 'true') {
        duplicateEmailMessage.style.display = 'block';
        submitButton.disabled = true; // Disable the submit button if duplicate email error persists
    }

    function validateEmail() {
        const emailValue = emailField.value.trim();
        const emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        const isValid = emailPattern.test(emailValue);

        if (emailValue === '') {
            errorMessage.style.display = 'none';
            duplicateEmailMessage.style.display = 'none'; // Hide duplicate email message when input is cleared
            submitButton.disabled = true;
            emailField.classList.add('has-error');
        } else if (!isValid) {
            errorMessage.style.display = 'block';
            duplicateEmailMessage.style.display = 'none'; // Hide duplicate email message for invalid format
            submitButton.disabled = true;
            emailField.classList.add('has-error');
        } else {
            errorMessage.style.display = 'none';
            submitButton.disabled = false;
            emailField.classList.remove('has-error');
            localStorage.removeItem('duplicateEmailError'); // Reset duplicate error state when valid email is entered
            duplicateEmailMessage.style.display = 'none'; // Hide the duplicate error when a valid email is entered
        }
    }

    emailField.addEventListener('input', validateEmail);

    form.addEventListener('submit', function(event) {
        event.preventDefault(); // Prevent default form submission

        validateEmail();

        if (!submitButton.disabled) {
            const formData = new FormData(form);

            // Reset the duplicate email message before each submission
            duplicateEmailMessage.style.display = 'none';

            fetch(form.action, {
                method: 'POST',
                body: formData,
                headers: {
                    'X-Requested-With': 'XMLHttpRequest',
                }
            })
            .then(response => {
                if (response.status === 422) {
                    // Duplicate email error
                    duplicateEmailMessage.style.display = 'block'; // Show duplicate error
                    localStorage.setItem('duplicateEmailError', 'true'); // Store duplicate email error in localStorage
                } else if (response.ok) {
                    hideInputFields();
                    if (successMessage) {
                        successMessage.style.display = 'block'; // Show success message
                    }
                    duplicateEmailMessage.style.display = 'none'; // Hide duplicate email error message
                    localStorage.setItem('formSubmitted', 'true'); // Mark form as submitted in localStorage

                    // Scroll to #contact_form with offset
                    const scrollOffset = 300; // Adjust this value for the desired offset
                    const topPos = contactFormSection.getBoundingClientRect().top + window.scrollY - scrollOffset;
                    
                    window.scrollTo({
                        top: topPos,
                        behavior: 'smooth'
                    });

                    return;
                } else {
                    // Handle other errors if necessary
                    console.error('Unexpected error:', response);
                }
            })
            .catch(error => {
                console.error('Error:', error);
            });
        }
    });
});

</script>


<!--------------------->



{% schema %}
{
  "name": "t:sections.main-blog.name",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "header",
      "content": "t:sections.main-blog.settings.header.content"
    },
    {
      "type": "select",
      "id": "layout",
      "options": [
        {
          "value": "grid",
          "label": "t:sections.main-blog.settings.layout.options__1.label"
        },
        {
          "value": "collage",
          "label": "t:sections.main-blog.settings.layout.options__2.label"
        }
      ],
      "default": "collage",
      "label": "t:sections.main-blog.settings.layout.label",
      "info": "t:sections.main-blog.settings.layout.info"
    },
    {
      "type": "checkbox",
      "id": "show_image",
      "default": true,
      "label": "t:sections.main-blog.settings.show_image.label"
    },
    {
      "type": "select",
      "id": "image_height",
      "options": [
        {
          "value": "adapt",
          "label": "t:sections.main-blog.settings.image_height.options__1.label"
        },
        {
          "value": "small",
          "label": "t:sections.main-blog.settings.image_height.options__2.label"
        },
        {
          "value": "medium",
          "label": "t:sections.main-blog.settings.image_height.options__3.label"
        },
        {
          "value": "large",
          "label": "t:sections.main-blog.settings.image_height.options__4.label"
        }
      ],
      "default": "medium",
      "label": "t:sections.main-blog.settings.image_height.label",
      "info": "t:sections.main-blog.settings.image_height.info"
    },
    {
      "type": "checkbox",
      "id": "show_date",
      "default": true,
      "label": "t:sections.main-blog.settings.show_date.label"
    },
    {
      "type": "checkbox",
      "id": "show_author",
      "default": false,
      "label": "t:sections.main-blog.settings.show_author.label"
    },
        {
      "type": "text",
      "id": "heading",
      "label": "Heading"
    },
     {
      "type": "richtext",
      "id": "description",
      "label": "Description"
    },
    {
      "type": "paragraph",
      "content": "t:sections.main-blog.settings.paragraph.content"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ]
}
{% endschema %}
